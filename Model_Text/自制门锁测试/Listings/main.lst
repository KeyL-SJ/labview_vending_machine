C51 COMPILER V9.54   MAIN                                                                  04/19/2022 12:43:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <key.h>
   2          #include <usart.h>
   3          #include <intrins.h>
   4          #include <stdio.h>
   5          sbit lock1 = P2^2;
   6          void Key_Pros(void);
   7          void Uart_Pros(void);
   8          
   9          unsigned int Key_Slow_Down;
  10          unsigned char Key_Value,Key_Down,Key_Old;
  11          
  12          unsigned char buf;
  13          unsigned char Uart_Buf[] = " ";
  14          unsigned char Uart_Buf_Index;
  15          
  16          bit lock_open_close = 0;
  17          
  18          
  19          void Delay500ms()   //@12.000MHz
  20          {
  21   1        unsigned char i, j, k;
  22   1      
  23   1        _nop_();
  24   1        _nop_();
  25   1        i = 23;
  26   1        j = 205;
  27   1        k = 120;
  28   1        do
  29   1        {
  30   2          do
  31   2          {
  32   3            while (--k);
  33   3          } while (--j);
  34   2        } while (--i);
  35   1      }
  36          
  37          void Timer0Init(void)   //1毫秒@11.0592MHz
  38          {
  39   1        TMOD &= 0xF0;   //设置定时器模式
  40   1        TL0 = 0xCD;   //设置定时初始值
  41   1        TH0 = 0xD4;   //设置定时初始值
  42   1        TF0 = 0;    //清除TF0标志
  43   1        TR0 = 1;    //定时器0开始计时
  44   1        
  45   1        EA = 1;
  46   1        ET0 = 1;
  47   1      }
  48          
  49          
  50          
  51          void main(void)
  52          {
  53   1        uart_init();
  54   1        while(1)
C51 COMPILER V9.54   MAIN                                                                  04/19/2022 12:43:01 PAGE 2   

  55   1        {
  56   2          Key_Pros();
  57   2        }
  58   1      }
  59          
  60          void Uart(void) interrupt 4
  61          {
  62   1        if (RI)
  63   1        {
  64   2          RI = 0;
  65   2          buf = SBUF; //把收到的信息从SBUF放到buf中。
  66   2          ES = 0;   //暂时关闭串口中断
  67   2      
  68   2          switch (buf)
  69   2          {
  70   3          case 0x31:
  71   3            P1 = 0xfe;
  72   3            break; //二进制 0011 0001  十进制 49 控制字符 1  16进制 0X31
  73   3          case 0x32:
  74   3            P1 = 0xfd;
  75   3            break; // 1111 1101
  76   3          case 0x33:
  77   3            P1 = 0xfb;
  78   3            break;
  79   3          case 0x34:
  80   3            P1 = 0xf7;
  81   3            break;
  82   3          case 0x35:
  83   3            P1 = 0xef;
  84   3            break;
  85   3          case 0x36:
  86   3            P1 = 0xdf;
  87   3            break;
  88   3          case 0x37:
  89   3            P1 = 0xbf;
  90   3            lock_open_close = 1;
  91   3            break;
  92   3          }
  93   2          ES = 1; //重新开启串口中断
  94   2          SBUF = buf;
  95   2          while (!TI)
  96   2            ;
  97   2          TI = 0;
  98   2        }
  99   1      }
 100          
 101          void Uart_Pros(void)
 102          {
 103   1        UART_send_string(Uart_Buf);
 104   1      }
 105          
 106          void Key_Pros(void)
 107          {
 108   1        if (Key_Slow_Down)
 109   1          return;
 110   1        Key_Value = Key_Read_BTN();
 111   1        Key_Down = Key_Value & (Key_Old ^ Key_Value);
 112   1        Key_Old = Key_Value;
 113   1        
 114   1        switch(Key_Down)
 115   1        {
 116   2          case 1:
C51 COMPILER V9.54   MAIN                                                                  04/19/2022 12:43:01 PAGE 3   

 117   2            P1 = 0xfe;
 118   2            Uart_Buf_Index = 1;
 119   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 120   2            Uart_Pros();
 121   2            break;
 122   2          case 2:
 123   2            P1 = 0xfd;
 124   2            Uart_Buf_Index = 2;
 125   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 126   2            Uart_Pros();
 127   2            break;
 128   2          case 3:
 129   2            P1 = 0xfb;
 130   2            Uart_Buf_Index = 3;
 131   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 132   2            Uart_Pros();
 133   2            break;
 134   2          case 4:
 135   2            P1 = 0xf7;
 136   2            Uart_Buf_Index = 4;
 137   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 138   2            Uart_Pros();
 139   2            break;
 140   2          case 5:
 141   2            P1 = 0xef;
 142   2            Uart_Buf_Index = 5;
 143   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 144   2            Uart_Pros();
 145   2            break;
 146   2          case 6:
 147   2            P1 = 0xdf;
 148   2            Uart_Buf_Index = 6;
 149   2            sprintf(Uart_Buf, "%d", (unsigned int)Uart_Buf_Index);
 150   2            Uart_Pros();
 151   2            break;
 152   2          default: lock1 = 0;break;
 153   2        }
 154   1        if(lock_open_close == 1)
 155   1        {
 156   2          switch(Uart_Buf_Index)
 157   2          {
 158   3            case 1:
 159   3              lock1 = 1;
 160   3              Delay500ms();
 161   3              break;
 162   3          }
 163   2          lock_open_close = 0;
 164   2        }
 165   1      }
 166          
 167          void Timer0_Handler(void) interrupt 1
 168          {
 169   1        if (++Key_Slow_Down == 10)
 170   1          Key_Slow_Down = 0;
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  04/19/2022 12:43:01 PAGE 4   

   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
